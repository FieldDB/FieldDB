define(["confidentiality_encryption/Confidential"], function(Confidential) {
  "use strict";

  function registerTests() {
    describe("Confidential", function() {
      describe("As a language consultant I want to be able to give data and have my data remain confidential", function() {
        it("should encrypt and decrypt strings ", function() {
          var message = "this is a sample confidential translation";
          var confidential = new Confidential();
          confidential.decryptedMode = true;
          expect(confidential.decrypt(confidential.encrypt(message))).toEqual(message);
        });

        it("should let the app set the top secret encryption key", function() {
          var message = "this is a sample confidential translation";
          var confidential = new Confidential();
          confidential.decryptedMode = true;

          confidential.set("secretkey",
            "thisisnormallyatopsecretautogeneratedkey");
          expect(confidential.decrypt(confidential.encrypt(message))).toEqual(message);
        });

        it("should let the app send in the top secret encryption key", function() {
          var confidential = new Confidential({
            secretkey: "thisisnormallyatopsecretautogeneratedkey"
          });
          confidential.decryptedMode = true;
          expect(confidential.get("secretkey")).toEqual("thisisnormallyatopsecretautogeneratedkey");
        });
      });
    });
  }

  return {
    describe: registerTests
  };
});
